//Find the maximum sub array 
#include<iostream>
using namespace std;

int maxSubArraySum(int a[], int size)
{
	

   int max_so_far = a[0];
   int curr_sum ; 
	int start_indx = 0;
	int end_indx = 0;
	for(int i = 0; i<size; i++)
	{ 
		curr_max_sum = a[i];
   		 curr_sum = a[i];
		curr_end_indx = i;
   		for (int j = i+1; j < size; j++)
   		{
       			 curr_sum = a[i] + curr_sum;
       			 if(curr_sum > curr_max_sum)
			{ 
				curr_max_sum = curr_sum;
				curr_end_indx = j;
			} 
		}
		if( curr_max_sum > max_so_far)
		{
  			start_indx = i;
			end_indx = curr_end_indx;
		}	
}  
for( int i = start_indx; i<=end_indx; i++)
	printf("%d ",a[i]); 
return max_so_far;
}
 
/* Driver program to test maxSubArraySum */
int main()
{
   int a[] =  {-2, -3, 4, -1, -2, 1, 5, -3};
   int n = sizeof(a)/sizeof(a[0]);
   int max_sum = maxSubArraySum(a, n);
   cout << "\nMaximum contiguous sum is " << max_sum;
   return 0;
}
